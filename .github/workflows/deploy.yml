name: Build, Push & Deploy

on:
  push:
    branches: [ "main" ]

env:
  REGISTRY: docker.io
  IMAGE_NAME: ${{ secrets.DOCKERHUB_USERNAME }}/node-cicd-kube

jobs:
  deploy-to-local:
    runs-on: self-hosted # Runner auto-hébergé sur votre machine
    steps:
      - name: Kill locking processes
        shell: powershell
        run: |
         handle64.exe -accepteula -nobanner "$env:RUNNER_WORKSPACE" | ForEach-Object {
         $parts = $_ -split '\s+'
         Stop-Process -Id $parts[4] -Force -ErrorAction SilentlyContinue
         }
         Remove-Item -Path "$env:RUNNER_TEMP\*" -Recurse -Force -ErrorAction SilentlyContinue
         Remove-Item -Path "$env:GITHUB_WORKSPACE" -Recurse -Force -ErrorAction SilentlyContinue
     
      - name: Préparation Workspace
        shell: cmd
        run: |
           :: Libération des locks résiduels
           powercfg -h off >nul 2>&1
           icacls "C:\actions-runner\*" /grant "Everyone:(OI)(CI)F" /T /C >nul
           fsutil behavior set disablelastaccess 1 >nul
           fsutil usn deletejournal /D C: >nul
      - name: Checkout code
        uses: actions/checkout@v4
        with:
            clean: false
            fetch-depth: 0
            sparse-checkout: |
             /*
                !node_modules/
            persist-credentials: false

      - name: Login to DockerHub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        run: |
          docker build -t $IMAGE_NAME:$GITHUB_SHA .
          docker push $IMAGE_NAME:$GITHUB_SHA

      - name: Deploy to Local Kubernetes
        env:
          KUBECONFIG: ${{ secrets.KUBECONFIG }}
        run: |
          kubectl apply -f k8s/deployment.yaml
          kubectl apply -f k8s/service.yaml
          kubectl rollout restart deployment/node-app

      - name: Clean workspace
        run: |
            git clean -ffdx
            git reset --hard HEAD